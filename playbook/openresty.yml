- hosts: openresty
  vars:
    ansible_ssh_user: root
  tasks:
    - name: Install gnupg
      apt: name=gnupg update_cache=yes cache_valid_time=3600

    - name: Add key
      apt_key: url=https://openresty.org/package/pubkey.gpg

    - name: Install repository command
      apt: name=software-properties-common update_cache=yes cache_valid_time=3600

    - name: Install repository
      apt_repository:
        repo: deb http://openresty.org/package/ubuntu bionic main
        state: present
        filename: openresty

    - name: Install openresty
      apt: name=openresty update_cache=yes cache_valid_time=3600

    - name: Enable openresty
      systemd: name=openresty.service enabled=yes


####################################################################################################
# Let's Encrypt
####################################################################################################
    - name: check arg
      ansible.builtin.meta: end_play
      when: domain is not defined

    - name: stop openresty
      service:
        name: openresty
        state: stopped

    - name: install certbot
      apt: name=letsencrypt state=present update_cache=yes

    - name: obtains cert keys
      command: letsencrypt certonly --standalone -d {{domain}} --email kanekoindustry@gmail.com --agree-tos --keep-until-expiring --non-interactive

    - name: openresty config
      copy:
        dest: /usr/local/openresty/nginx/conf/nginx.conf
        content: |
          worker_processes  auto;
          events {
              worker_connections  1024;
          }
          http {
              include       mime.types;
              default_type  application/octet-stream;
              sendfile        on;
              keepalive_timeout  65;
              server {
                  listen       80;
                  return 301 https://$host$request_uri;
                  server_name {{domain}};
                  location / {
                      root   html;
                      index  index.html index.htm;
                  }
                  error_page   500 502 503 504  /50x.html;
                  location = /50x.html {
                      root   html;
                  }
              }
              server {
                  client_max_body_size 512M;
                  listen 443 ssl;
                  server_name {{domain}};
                  ssl_certificate /etc/letsencrypt/live/{{domain}}/fullchain.pem;
                  ssl_certificate_key /etc/letsencrypt/live/{{domain}}/privkey.pem;
                  ssl_session_cache shared:SSL:1m;
                  ssl_session_timeout 5m;
                  ssl_protocols TLSv1.2 TLSv1.3;
                  ssl_ciphers HIGH:!aNULL:!MD5;
                  ssl_prefer_server_ciphers on;
                  location / {
                      proxy_set_header Host $http_host;
                      proxy_pass http://127.0.0.1:3000/;
                      proxy_redirect http:// https://;
                      root html;
                      index index.html index.htm;
                  }
              }
              server {
                  client_max_body_size 512M;
                  listen 443 ssl;
                  listen 10090 ssl;
                  server_name {{domain}};
                  ssl_certificate /etc/letsencrypt/live/{{domain}}/fullchain.pem;
                  ssl_certificate_key /etc/letsencrypt/live/{{domain}}/privkey.pem;
                  ssl_session_cache shared:SSL:1m;
                  ssl_session_timeout 5m;
                  ssl_protocols TLSv1.2 TLSv1.3;
                  ssl_ciphers HIGH:!aNULL:!MD5;
                  ssl_prefer_server_ciphers on;
                  location / {
                      proxy_pass http://127.0.0.1:10080/;
                      proxy_redirect http:// https://;
                      # proxy_redirect default;
                      proxy_set_header Host $http_host;
                      proxy_set_header X-Real-IP $remote_addr;
                      proxy_set_header X-Forwarded-Proto $scheme;
                      proxy_set_header X-Forwarded-Host $http_host;
                      proxy_set_header X-Forwarded-Server $host;
                      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                  }
              }
          }
    - name: start openresty
      service:
        name: openresty
        state: started

    - name: auto update cert keys
      cron:
        name: letsencrypt
        cron_file: letsencrypt
        user: root
        special_time: monthly
        job: sh -c '/usr/sbin/service openresty stop && letsencrypt renew && /usr/sbin/service openresty start' >> /var/log/cron_ssl.log
